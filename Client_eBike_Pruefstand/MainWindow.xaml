<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Client_eBike_Pruefstand"
        xmlns:System="clr-namespace:System;assembly=mscorlib" x:Class="Client_eBike_Pruefstand.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" WindowStartupLocation="CenterScreen" WindowStyle="None" Background="{x:Null}" AllowsTransparency="True">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF31384D"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF31384D"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
        <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="#FF31384D" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid HorizontalAlignment="Left" Height="450" VerticalAlignment="Top" Width="800">
        <Rectangle Fill="#FF39393C" HorizontalAlignment="Left" Height="450" RadiusY="13" RadiusX="13" VerticalAlignment="Top" Width="800"/>
        <Rectangle Fill="#FF39393C" HorizontalAlignment="Center" Height="41" RadiusY="13" RadiusX="13" Width="800" VerticalAlignment="Top" ClipToBounds="True" MouseLeftButtonDown="Window_MouseLeftButtonDown"/>
        <Ellipse x:Name="El_Close" Fill="#FFFF0505" HorizontalAlignment="Left" Height="20" Margin="767.25,10,0,0" VerticalAlignment="Top" Width="20" Focusable="True" MouseLeftButtonUp="Windows_Close" MouseLeftButtonDown="Windows_CloseMouseLeftButtonDown"
                 MouseEnter="Windows_CloseMouseEnter" MouseLeave="Windows_CloseMouseLeave"/>
        <Ellipse x:Name="El_Mini" Fill="#FFFFF309" HorizontalAlignment="Left" Height="20" Margin="717,10,0,0" VerticalAlignment="Top" Width="20" MouseLeftButtonUp="Windows_Minimize" MouseLeftButtonDown="Windows_MiniMouseLeftButtonDown"
                 MouseEnter="Windows_MiniMouseEnter"  MouseLeave="Windows_MiniMouseLeave"/>
        <Ellipse Fill="DarkGreen" HorizontalAlignment="Left" Height="20" Margin="742,10,0,0" VerticalAlignment="Top" Width="20" Opacity="1"/>
        <GroupBox x:Name="Temperatur1" Header="Temperatur                  " HorizontalAlignment="Left" Height="170" Margin="10,46,0,0" VerticalAlignment="Top" Width="363" Foreground="White" FontSize="20" BorderBrush="{x:Null}" Background="#FF31384D">
            <Button x:Name="BTemperatur" Content="00.00°C" HorizontalAlignment="Center" Height="151.999" Margin="0" VerticalAlignment="Center" Width="353.333" Background="#FF31384D" BorderBrush="{x:Null}" 
                    MouseDoubleClick="LogButtonOnClick" FontSize="72" Foreground="White" Focusable="False" IsTabStop="False" UseLayoutRounding="False" Style="{DynamicResource ButtonStyle}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
        </GroupBox>
        <GroupBox Header="Gewicht" HorizontalAlignment="Left" Height="170" Margin="427,46,0,0" VerticalAlignment="Top" Width="363" Foreground="White" FontSize="20" BorderBrush="{x:Null}" Background="#FF31384D">
            <Button x:Name="BGewicht" Content="00.00kg" HorizontalAlignment="Center" Height="151.999" Margin="0" VerticalAlignment="Center" Width="353.333" Background="#FF31384D" BorderBrush="{x:Null}" 
                    MouseDoubleClick="LogButtonOnClick" FontSize="72" Foreground="White" Focusable="False" IsTabStop="False" UseLayoutRounding="False" Style="{DynamicResource ButtonStyle}"/>
        </GroupBox>
        <GroupBox Header="Anemometer" HorizontalAlignment="Left" Height="170" Margin="10,246,0,0" VerticalAlignment="Top" Width="363" Foreground="White" FontSize="20" BorderBrush="{x:Null}" Background="#FF31384D">
            <Button x:Name="BAnemometer" Content="00.00m/s" HorizontalAlignment="Center" Height="151.999" Margin="0" VerticalAlignment="Center" Width="353.333" Background="#FF31384D" BorderBrush="{x:Null}" 
                    MouseDoubleClick="LogButtonOnClick" FontSize="72" Foreground="White" Focusable="False" IsTabStop="False" UseLayoutRounding="False" Style="{DynamicResource ButtonStyle}"/>
        </GroupBox>
        <GroupBox Header="Lüfter" HorizontalAlignment="Left" Height="170" Margin="427,246,0,0" VerticalAlignment="Top" Width="363" Foreground="White" FontSize="20" BorderBrush="{x:Null}" Background="#FF31384D">
            <Button x:Name="BLuefter" Content="00.00%" HorizontalAlignment="Center" Height="151.999" Margin="0" VerticalAlignment="Center" Width="353.333" Background="#FF31384D" BorderBrush="{x:Null}" 
                    MouseDoubleClick="LogButtonOnClick" FontSize="72" Foreground="White" Focusable="False" IsTabStop="False" UseLayoutRounding="False" Style="{DynamicResource ButtonStyle}"/>
        </GroupBox>
        <Ellipse x:Name="ElTemperatur" Fill="#FFC90D0D" Margin="348,191,0,0" Focusable="True" Visibility="Hidden" Height="12" VerticalAlignment="Top" HorizontalAlignment="Left" Width="12"/>
        <Ellipse x:Name="ElGewicht" Fill="#FFC90D0D"   HorizontalAlignment="Left" Height="12" Margin="762,191,0,0" VerticalAlignment="Top" Width="12" Focusable="True" Visibility="Hidden"/>
        <Ellipse x:Name="ElAnemometer" Fill="#FFC90D0D"   HorizontalAlignment="Left" Height="12" Margin="348,389,0,0" VerticalAlignment="Top" Width="12" Focusable="True" Visibility="Hidden"/>
        <Ellipse x:Name="ElLuefter" Fill="#FFC90D0D"   HorizontalAlignment="Left" Height="12" Margin="762,389,0,0" VerticalAlignment="Top" Width="12" Focusable="True" Visibility="Hidden"/>
        <Button x:Name="EinstellungButton" Content="Einstellungen" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Style="{DynamicResource ButtonStyle_Setting}" FontSize="14" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FFD4D4D4" FontWeight="Bold" Click="Click_Einstellung" Cursor="Hand">
            <Button.Resources>
                <Style x:Key="ButtonStyle_Setting" TargetType="{x:Type Button}">
                    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                    <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="8">
                                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsDefaulted" Value="true">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="TextElement.Foreground" TargetName="border" Value="#FFD7DCEA"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="TextElement.Foreground" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Resources>
            <Button.ContextMenu>
                <ContextMenu/>
            </Button.ContextMenu>
        </Button>
        <TextBox x:Name="networkStatus" HorizontalAlignment="Left" Margin="10,421,0,0" TextWrapping="Wrap" Text="Disconnected" VerticalAlignment="Top" Width="777" FontSize="15" Background="#FF39393C" BorderBrush="{x:Null}" SelectionBrush="{x:Null}" Foreground="#FFA2A2A2" FontFamily="Arial"/>
        <Expander x:Name="expander" Header="######" HorizontalAlignment="Left" Margin="122,50,0,0" VerticalAlignment="Top" Width="107" FontSize="20" Foreground="#FF17FF00" FontFamily="Courier New">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <CheckBox x:Name="checkBox0" Content="Motor0" HorizontalAlignment="Left" VerticalAlignment="Top" VerticalContentAlignment="Center" Grid.Row="0" Width="95" Background="#FF0BEE20" Style="{DynamicResource CheckBoxStyle}" Foreground="#FF17FF00" Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked" Margin="10,0,0,0" FontFamily="Courier New"/>
                <CheckBox x:Name="checkBox1" Content="Motor1" HorizontalAlignment="Left" VerticalAlignment="Top" VerticalContentAlignment="Center" Grid.Row="1" Width="95" Background="#FF0BEE20" Style="{DynamicResource CheckBoxStyle}" Foreground="#FF17FF00" Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked" Margin="10,0,0,0" FontFamily="Courier New"/>
                <CheckBox x:Name="checkBox2" Content="Motor2" HorizontalAlignment="Left" VerticalAlignment="Top" VerticalContentAlignment="Center" Grid.Row="2" Width="95" Background="#FF0BEE20" Style="{DynamicResource CheckBoxStyle}" Foreground="#FF17FF00" Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked" Margin="10,0,0,0" FontFamily="Courier New"/>
                <CheckBox x:Name="checkBox3" Content="Motor3" HorizontalAlignment="Left" VerticalAlignment="Top" VerticalContentAlignment="Center" Grid.Row="3" Width="95" Background="#FF0BEE20" Style="{DynamicResource CheckBoxStyle}" Foreground="#FF17FF00" Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked" Margin="10,0,0,0" FontFamily="Courier New"/>
                <CheckBox x:Name="checkBox4" Content="Motor4" HorizontalAlignment="Left" VerticalAlignment="Top" VerticalContentAlignment="Center" Grid.Row="4" Width="95" Background="#FF0BEE20" Style="{DynamicResource CheckBoxStyle}" Foreground="#FF17FF00" Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked" Margin="10,0,0,0" FontFamily="Courier New"/>
                <CheckBox x:Name="checkBox5" Content="Motor5" HorizontalAlignment="Left" VerticalAlignment="Top" VerticalContentAlignment="Center" Grid.Row="5" Width="95" Background="#FF0CFF00" Style="{DynamicResource CheckBoxStyle}" Foreground="#FF17FF00" Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked" Margin="10,0,0,0" FontFamily="Courier New"/>
            </Grid>
        </Expander>
    </Grid>
</Window>
